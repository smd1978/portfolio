#!/usr/bin/env node
/* global require, process */
/* eslint-disable no-console */
'use strict';

var nanofy = require('../index'),
    fs = require('fs'),//
    args = require('minimist')(process.argv.slice(2)),
    config;

//Input & output is required if there's no activate params
if (args._.length < 2 && args.activate === undefined) { console.log('Usage: nanosvg source_blob output_folder [options]'); }
else {
    args.cli = true;

    if (args.config) {
        try {
            config = JSON.parse(fs.readFileSync(args.config));

            Object.keys(config).forEach(function(key) {
                if (!args[key]) {
                    args[key] = config[key];
                }
            });
        }
        catch (e) { console.error('Failed to load config file.'); }

        delete args.config;
    }

    nanofy(args._[0], args._[1], args).catch(function(res) {
        if (res) {
            console.log(res.error || res.message);
        }
    });
}